<?xml version="1.0"?>

<launch>

  <!-- <env name="ROSCONSOLE_CONFIG_FILE" value="$(find quad_control)/custom_rosconsole.conf"/> -->

  <arg name="enable_logging" default="true"/>
  <arg name="enable_ground_truth" default="true"/>
  <arg name="log_file" default="quad"/>
  <arg name="headless" default="true"/>
  <arg name="gui" default="true"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find quad_gazebo)/worlds/willowgarage.world"/> 
    <!-- more default parameters can be changed here -->
    <arg name="debug" value="false" /> 
    <arg name="paused" value="true"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="gui" value="$(arg gui)"/>
  </include>

  <!-- Spawn 3DR Model -->                  
   <include file="$(find quad_gazebo)/launch/spawn/spawn_quad_kinect.launch">
    <arg name="model" value="$(find quad_description)/urdf/kit_c_base.xacro" />  
    <arg name="enable_logging" value="$(arg enable_logging)" />
    <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
    <arg name="log_file" value="$(arg log_file)"/>
  </include>

  <group ns="quad">
    <node name="joy_node" pkg="joy" type="joy_node" />
    <node name="quad_joystick_interface" pkg="quad_joystick_interface" type="quad_joystick_interface" output="screen"/> 
    <node name="waypoint_node" pkg="quad_control" type="waypoint_publisher_node" output="screen"/> 
  </group>
  <group ns="quad">
    <node name="position_controller_node" pkg="quad_control" type="position_controller_node" output="screen"> 
      <rosparam command="load" file="$(find quad_gazebo)/resource/kit_c.yaml" /> 
      <rosparam command="load" file="$(find quad_control)/resource/position_controller.yaml" /> 
    </node> 
    <node name="attitude_controller_node" pkg="quad_control" type="attitude_controller_node" output="screen"> 
      <rosparam command="load" file="$(find quad_gazebo)/resource/kit_c.yaml" /> 
      <rosparam command="load" file="$(find quad_control)/resource/attitude_controller.yaml" />  
    </node> 
  </group>


  <!-- We do not have a robot connected, so publish fake joint states -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node>

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

 <!-- Fake laser -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
     <param name="scan_height" value="10"/> 
     <param name="scan_time" value="0.033"/>
     <param name="range_min" value="0.45"/>
     <param name="range_max" value="10.0"/>
     <param name="min_height" value=".10"/>
     <param name="max_height" value="2.0"/>
     <param name="output_frame_id" value="quad/camera__link"/>
     <remap from="image" to="/quad/camera_/depth/disparity"/>
     <remap from="/scan" to="/sim_scan"/> 
  </node>

  <!-- Load a Map  -->
  <node name="map_server" pkg="map_server" type="map_server" args=" $(find ardupilot_sitl_gazebo_plugin)/maps/mymap.yaml" />
 
  <!-- Load AMCL  -->
  <node pkg="amcl" type="amcl" name="amcl" output="screen">
    <param name="odom_frame_id" value="odom"/>
    <param name="global_frame_id" value="map" />
    <param name="odom_model_type" value="omni"/> <!--value="diff-corrected"-->
    <param name="odom_alpha5" value="0.1"/>
    <param name="transform_tolerance" value="0.5" /> <!--0.2-->
    <param name="gui_publish_rate" value="1.0"/> <!--10.0-->
    <param name="laser_max_beams" value="30"/>
    <param name="min_particles" value="500"/>
    <param name="max_particles" value="5000"/>
    <param name="kld_err" value="0.05"/>
    <param name="kld_z" value="0.99"/>
    <param name="odom_alpha1" value="0.2"/>
    <param name="odom_alpha2" value="0.2"/>
    <!-- translation std dev, m -->
    <param name="odom_alpha3" value="0.8"/>
    <param name="odom_alpha4" value="0.2"/>
    <param name="laser_z_hit" value="0.5"/>
    <param name="laser_z_short" value="0.05"/>
    <param name="laser_z_max" value="0.05"/>
    <param name="laser_z_rand" value="0.5"/>
    <param name="laser_sigma_hit" value="0.2"/>
    <param name="laser_lambda_short" value="0.1"/>
    <param name="laser_lambda_short" value="0.1"/>
    <param name="laser_model_type" value="likelihood_field"/>
   <!-- <param name="laser_model_type" value="beam"/> -->
  <param name="laser_likelihood_max_dist" value="2.0"/>
  <param name="update_min_d" value="0.2"/>
  <param name="update_min_a" value="0.5"/>
  <param name="resample_interval" value="1"/>
  <param name="recovery_alpha_slow" value="0.0"/>
  <param name="recovery_alpha_fast" value="0.0"/>
    <param name="update_min_d" value="0.5"/>
    <param name="update_min_a" value="1.0"/>
    <param name="use_map_topic" value="false"/>
</node>

<!-- Move base -->
 <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">

    <rosparam file="$(find ardupilot_sitl_gazebo_plugin)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find ardupilot_sitl_gazebo_plugin)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find ardupilot_sitl_gazebo_plugin)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find ardupilot_sitl_gazebo_plugin)/config/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find ardupilot_sitl_gazebo_plugin)/config/base_local_planner_params.yaml" command="load" /> 
     <rosparam file="$(find ardupilot_sitl_gazebo_plugin)/config/move_base_params.yaml" command="load" />
    <rosparam file="$(find ardupilot_sitl_gazebo_plugin)/config/dwa_local_planner_params.yaml" command="load" /> 
     <rosparam file="$(find ardupilot_sitl_gazebo_plugin)/config/global_planner_params.yaml" command="load" />
    <rosparam file="$(find ardupilot_sitl_gazebo_plugin)/config/navfn_global_planner_params.yaml" command="load" /> 

    <remap from="cmd_vel" to="cmd_vel_bkp"/>
    <remap from="odom" to="/erlecopter/ground_truth/odometry"/>
    <remap from="scan" to="scan"/>
</node> 

<!-- Move base transform -->
  <node pkg="move_base" type="move_base_transform" respawn="false" name="move_base_trans" output="screen">
  <remap from="cmd_vel_trans" to="mavros/setpoint_velocity/cmd_vel"/>
</node> 

  <!-- Visualisation RVIZ -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find quad_2dnav)/resource/quad_2dnav.rviz" output="screen"/>
  
</launch>

